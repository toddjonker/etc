# Direnv support for GraalVM source trees
#
# This assumes that there exists a sibling `mx` directory.

#echo DOLLAR_0="$0"   # bash
#echo DOLLAR_1="$1"   # this file

graal_mx() {
    export MX_VERSION=$(grep mx_version $(find_up common.json) | cut -f 4 -d '"')

    export MX_PATH=$(expand_path ../mx)

    expect_commit=$(git -C "$MX_PATH" rev-parse --verify "tags/${MX_VERSION}^{commit}")
    actual_commit=$(git -C "$MX_PATH" rev-parse --verify HEAD)

    if [[ $expect_commit != $actual_commit ]]
    then
        echo
        echo "**** WARNING! mx is not at the configured version $MX_VERSION"
        echo
    fi

    PATH_add "${MX_PATH}"


    # https://github.com/graalvm/mx/blob/master/README.md#exploded-builds
    #   MX_BUILD_EXPLODED=true is roughly equivalent to building OpenJDK
    #   with `make` instead of `make images`.

    export MX_BUILD_EXPLODED=true
}


graal_java() {
    local java=$1/build/macosx-aarch64-server-release/images/graal-builder-jdk

    if [[ -d $java ]]; then
        export JAVA_HOME=$java
    else
        echo
        echo "**** WARNING! configured JAVA_HOME isn't for Graal: $java"
        echo
    fi
}
