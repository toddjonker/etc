# Direnv support for GraalVM source trees                             -*-sh-*-
#
# This assumes that there exists a sibling `mx` directory.

#echo DOLLAR_0="$0"   # bash
#echo DOLLAR_1="$1"   # this file

graal_mx() {
    # I don't think this needs to be exported.
    local MX_VERSION
    MX_VERSION=$(grep mx_version $(find_up common.json) | cut -f 4 -d '"')

    export MX_PATH=$(expand_path ../mx)
    if [[ ! -d $MX_PATH ]]
    then
        echo
        echo "**** ERROR! mx repo does not exist at $MX_PATH"
        echo "Fix this by running:"
        echo "  (cd .. && git clone git@github.com:graalvm/mx.git && cd mx && git checkout -B $MX_VERSION tags/$MX_VERSION) && direnv reload"
        echo

        return
    fi


    if [[ -z $(git -C "$MX_PATH" tag -l "$MX_VERSION") ]]
    then
        echo
        echo "**** WARNING! mx repo does not have the configured version $MX_VERSION"
        echo "Fix this by running:"
        echo "  (cd '$MX_PATH' && git switch master && git pull && git checkout -B $MX_VERSION tags/$MX_VERSION) && direnv reload"
        echo

        return
    fi

    expect_commit=$(git -C "$MX_PATH" rev-parse --verify "tags/${MX_VERSION}^{commit}")
    actual_commit=$(git -C "$MX_PATH" rev-parse --verify HEAD)

    if [[ $expect_commit != $actual_commit ]]
    then
        echo
        echo "**** WARNING! mx is not at the configured version $MX_VERSION"
        echo "Fix this by running:"
        echo "  (cd '$MX_PATH' && git checkout -B $MX_VERSION tags/$MX_VERSION) && direnv reload"
        echo
    fi

    PATH_add "${MX_PATH}"


    # https://github.com/graalvm/mx/blob/master/README.md#exploded-builds
    #   MX_BUILD_EXPLODED=true is roughly equivalent to building OpenJDK
    #   with `make` instead of `make images`.

# Currently disabled because this turns off jmod assembly.
#    export MX_BUILD_EXPLODED=true
}


graal_java() {
    local java
    java=$(echo "$1"/build/*/images/graal-builder-jdk | head --lines=1)

    if [[ -z $java ]]; then
        echo
        echo "**** WARNING! No graal-builder-jdk found under $1"
        echo "You probably need to go there and run 'make graal-builder-image'"
        echo
    else
        export JAVA_HOME="$(realpath "$java")"
    fi
}
